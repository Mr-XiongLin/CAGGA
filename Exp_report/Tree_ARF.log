Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 173.5585937500 MiB 173.5585937500 MiB           1   @profile(precision=10,stream=open("Tree_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 175.4882812500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 175.4882812500 MiB   1.9296875000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 175.6093750000 MiB 175.6093750000 MiB           1   @profile(precision=10,stream=open("Tree_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 176.9921875000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 176.9921875000 MiB   1.3828125000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 177.1132812500 MiB 177.1132812500 MiB           1   @profile(precision=10,stream=open("Tree_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 178.9570312500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 178.9570312500 MiB   1.8437500000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 178.9570312500 MiB 178.9570312500 MiB           1   @profile(precision=10,stream=open("Tree_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 180.4023437500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 180.4023437500 MiB   1.4453125000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 180.4023437500 MiB 180.4023437500 MiB           1   @profile(precision=10,stream=open("Tree_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.8164062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.8164062500 MiB   1.4140625000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.9375000000 MiB 181.9375000000 MiB           1   @profile(precision=10,stream=open("Tree_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 183.5234375000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 183.5234375000 MiB   1.5859375000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 183.5234375000 MiB 183.5234375000 MiB           1   @profile(precision=10,stream=open("Tree_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 185.1484375000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 185.1484375000 MiB   1.6250000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 185.1484375000 MiB 185.1484375000 MiB           1   @profile(precision=10,stream=open("Tree_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 186.6210937500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 186.6210937500 MiB   1.4726562500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 186.7421875000 MiB 186.7421875000 MiB           1   @profile(precision=10,stream=open("Tree_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 188.5312500000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 188.5312500000 MiB   1.7890625000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 188.5312500000 MiB 188.5312500000 MiB           1   @profile(precision=10,stream=open("Tree_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 190.1171875000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 190.1171875000 MiB   1.5859375000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


