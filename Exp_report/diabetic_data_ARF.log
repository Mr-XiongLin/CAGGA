Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 251.7656250000 MiB 251.7656250000 MiB           1   @profile(precision=10,stream=open("diabetic_data_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 254.1914062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 254.1914062500 MiB   2.4257812500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 254.1914062500 MiB 254.1914062500 MiB           1   @profile(precision=10,stream=open("diabetic_data_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 256.5273437500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 256.5273437500 MiB   2.3359375000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 256.5273437500 MiB 256.5273437500 MiB           1   @profile(precision=10,stream=open("diabetic_data_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 258.6250000000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 258.6250000000 MiB   2.0976562500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 258.6250000000 MiB 258.6250000000 MiB           1   @profile(precision=10,stream=open("diabetic_data_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 260.9687500000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 260.9687500000 MiB   2.3437500000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 260.9687500000 MiB 260.9687500000 MiB           1   @profile(precision=10,stream=open("diabetic_data_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 263.3750000000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 263.3750000000 MiB   2.4062500000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 263.3750000000 MiB 263.3750000000 MiB           1   @profile(precision=10,stream=open("diabetic_data_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 266.0351562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 266.0351562500 MiB   2.6601562500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 266.0351562500 MiB 266.0351562500 MiB           1   @profile(precision=10,stream=open("diabetic_data_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 268.6601562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 268.6601562500 MiB   2.6250000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 268.6601562500 MiB 268.6601562500 MiB           1   @profile(precision=10,stream=open("diabetic_data_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 271.3476562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 271.3476562500 MiB   2.6875000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 271.3476562500 MiB 271.3476562500 MiB           1   @profile(precision=10,stream=open("diabetic_data_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 274.4414062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 274.4414062500 MiB   3.0937500000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 274.4414062500 MiB 274.4414062500 MiB           1   @profile(precision=10,stream=open("diabetic_data_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 274.4414062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 261.7460937500 MiB -12.6953125000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


