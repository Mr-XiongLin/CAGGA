Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 179.2460937500 MiB 179.2460937500 MiB           1   @profile(precision=10,stream=open("fried_OzaBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 180.0703125000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 180.0703125000 MiB   0.8242187500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 180.0703125000 MiB 180.0703125000 MiB           1   @profile(precision=10,stream=open("fried_OzaBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.1601562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.1601562500 MiB   1.0898437500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.1601562500 MiB 181.1601562500 MiB           1   @profile(precision=10,stream=open("fried_OzaBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.1679687500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.1679687500 MiB   0.0078125000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.1679687500 MiB 181.1679687500 MiB           1   @profile(precision=10,stream=open("fried_OzaBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.2070312500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.2070312500 MiB   0.0390625000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.2070312500 MiB 181.2070312500 MiB           1   @profile(precision=10,stream=open("fried_OzaBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.2070312500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.2070312500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.2070312500 MiB 181.2070312500 MiB           1   @profile(precision=10,stream=open("fried_OzaBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.2070312500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.2070312500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.2070312500 MiB 181.2070312500 MiB           1   @profile(precision=10,stream=open("fried_OzaBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.2070312500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.1484375000 MiB  -0.0585937500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.1484375000 MiB 181.1484375000 MiB           1   @profile(precision=10,stream=open("fried_OzaBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.1484375000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.1484375000 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.1484375000 MiB 181.1484375000 MiB           1   @profile(precision=10,stream=open("fried_OzaBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.1484375000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.1484375000 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.1484375000 MiB 181.1484375000 MiB           1   @profile(precision=10,stream=open("fried_OzaBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.1484375000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.1484375000 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


