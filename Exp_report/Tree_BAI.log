Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 173.2460937500 MiB 173.2460937500 MiB           1   @profile(precision=10,stream=open("Tree_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 173.5117187500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 173.5117187500 MiB   0.2656250000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 173.6328125000 MiB 173.6328125000 MiB           1   @profile(precision=10,stream=open("Tree_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 173.6757812500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 173.6757812500 MiB   0.0429687500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 173.6757812500 MiB 173.6757812500 MiB           1   @profile(precision=10,stream=open("Tree_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 173.6835937500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 173.6835937500 MiB   0.0078125000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 173.7460937500 MiB 173.7460937500 MiB           1   @profile(precision=10,stream=open("Tree_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 173.8085937500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 173.8085937500 MiB   0.0625000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 173.8085937500 MiB 173.8085937500 MiB           1   @profile(precision=10,stream=open("Tree_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 173.8085937500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 173.8085937500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 173.8085937500 MiB 173.8085937500 MiB           1   @profile(precision=10,stream=open("Tree_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 173.8789062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 173.8789062500 MiB   0.0703125000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 173.8789062500 MiB 173.8789062500 MiB           1   @profile(precision=10,stream=open("Tree_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 173.8789062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 173.8789062500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 173.8789062500 MiB 173.8789062500 MiB           1   @profile(precision=10,stream=open("Tree_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 173.8789062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 173.8789062500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 173.8789062500 MiB 173.8789062500 MiB           1   @profile(precision=10,stream=open("Tree_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 173.8789062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 173.8789062500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 173.8789062500 MiB 173.8789062500 MiB           1   @profile(precision=10,stream=open("Tree_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 173.9257812500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 173.9257812500 MiB   0.0468750000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


