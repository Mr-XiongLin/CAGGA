Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 179.4140625000 MiB 179.4140625000 MiB           1   @profile(precision=10,stream=open("fried_LevBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.2968750000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.2968750000 MiB   1.8828125000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.2968750000 MiB 181.2968750000 MiB           1   @profile(precision=10,stream=open("fried_LevBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.4609375000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.4609375000 MiB   0.1640625000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.4609375000 MiB 181.4609375000 MiB           1   @profile(precision=10,stream=open("fried_LevBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.4609375000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.4609375000 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.4609375000 MiB 181.4609375000 MiB           1   @profile(precision=10,stream=open("fried_LevBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.4609375000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.4101562500 MiB  -0.0507812500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.4101562500 MiB 181.4101562500 MiB           1   @profile(precision=10,stream=open("fried_LevBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.4101562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.4101562500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.4101562500 MiB 181.4101562500 MiB           1   @profile(precision=10,stream=open("fried_LevBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.4101562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.4101562500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.4101562500 MiB 181.4101562500 MiB           1   @profile(precision=10,stream=open("fried_LevBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.4101562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.4101562500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.4101562500 MiB 181.4101562500 MiB           1   @profile(precision=10,stream=open("fried_LevBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.4101562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.3828125000 MiB  -0.0273437500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.3828125000 MiB 181.3828125000 MiB           1   @profile(precision=10,stream=open("fried_LevBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.3828125000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.3828125000 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 181.3828125000 MiB 181.3828125000 MiB           1   @profile(precision=10,stream=open("fried_LevBagg.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 181.3828125000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 181.3828125000 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


