Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 200.6992187500 MiB 200.6992187500 MiB           1   @profile(precision=10,stream=open("Stream5A_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 208.0351562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 208.0351562500 MiB   7.3359375000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 208.0351562500 MiB 208.0351562500 MiB           1   @profile(precision=10,stream=open("Stream5A_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 209.1367187500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 209.1367187500 MiB   1.1015625000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 209.1367187500 MiB 209.1367187500 MiB           1   @profile(precision=10,stream=open("Stream5A_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 209.1562500000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 209.1562500000 MiB   0.0195312500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 209.1562500000 MiB 209.1562500000 MiB           1   @profile(precision=10,stream=open("Stream5A_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 209.1562500000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 209.1562500000 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 209.1562500000 MiB 209.1562500000 MiB           1   @profile(precision=10,stream=open("Stream5A_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 209.1562500000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 209.0976562500 MiB  -0.0585937500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 209.0976562500 MiB 209.0976562500 MiB           1   @profile(precision=10,stream=open("Stream5A_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 209.0976562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 209.0976562500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 209.0976562500 MiB 209.0976562500 MiB           1   @profile(precision=10,stream=open("Stream5A_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 209.0976562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 209.0976562500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 209.0976562500 MiB 209.0976562500 MiB           1   @profile(precision=10,stream=open("Stream5A_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 209.0976562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 209.0976562500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 209.0976562500 MiB 209.0976562500 MiB           1   @profile(precision=10,stream=open("Stream5A_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 209.0976562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 209.0976562500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 209.0976562500 MiB 209.0976562500 MiB           1   @profile(precision=10,stream=open("Stream5A_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 209.0976562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 209.0976562500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


