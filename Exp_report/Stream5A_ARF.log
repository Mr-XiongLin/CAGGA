Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 200.5156250000 MiB 200.5156250000 MiB           1   @profile(precision=10,stream=open("Stream5A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 201.5351562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 201.5351562500 MiB   1.0195312500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 201.5351562500 MiB 201.5351562500 MiB           1   @profile(precision=10,stream=open("Stream5A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 202.0117187500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 202.0117187500 MiB   0.4765625000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 202.0117187500 MiB 202.0117187500 MiB           1   @profile(precision=10,stream=open("Stream5A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 202.5117187500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 202.5117187500 MiB   0.5000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 202.5117187500 MiB 202.5117187500 MiB           1   @profile(precision=10,stream=open("Stream5A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 203.1054687500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 203.1054687500 MiB   0.5937500000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 203.1054687500 MiB 203.1054687500 MiB           1   @profile(precision=10,stream=open("Stream5A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 203.4570312500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 203.4570312500 MiB   0.3515625000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 203.4570312500 MiB 203.4570312500 MiB           1   @profile(precision=10,stream=open("Stream5A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 203.7070312500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 203.7070312500 MiB   0.2500000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 203.7070312500 MiB 203.7070312500 MiB           1   @profile(precision=10,stream=open("Stream5A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 203.8320312500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 203.8320312500 MiB   0.1250000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 203.8320312500 MiB 203.8320312500 MiB           1   @profile(precision=10,stream=open("Stream5A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 204.0820312500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 204.0820312500 MiB   0.2500000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 204.0820312500 MiB 204.0820312500 MiB           1   @profile(precision=10,stream=open("Stream5A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 204.7421875000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 204.7421875000 MiB   0.6601562500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 204.7421875000 MiB 204.7421875000 MiB           1   @profile(precision=10,stream=open("Stream5A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 205.3046875000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 205.3046875000 MiB   0.5625000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


