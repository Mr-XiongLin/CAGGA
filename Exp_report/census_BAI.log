Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 304.0312500000 MiB 304.0312500000 MiB           1   @profile(precision=10,stream=open("census_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 304.3203125000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 304.3203125000 MiB   0.2890625000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 304.3281250000 MiB 304.3281250000 MiB           1   @profile(precision=10,stream=open("census_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 304.3789062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 304.3789062500 MiB   0.0507812500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 304.3828125000 MiB 304.3828125000 MiB           1   @profile(precision=10,stream=open("census_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 304.3828125000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 304.3828125000 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 304.3867187500 MiB 304.3867187500 MiB           1   @profile(precision=10,stream=open("census_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 304.3867187500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 304.3867187500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 304.3906250000 MiB 304.3906250000 MiB           1   @profile(precision=10,stream=open("census_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 304.3906250000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 304.3906250000 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 304.3945312500 MiB 304.3945312500 MiB           1   @profile(precision=10,stream=open("census_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 304.3945312500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 304.3945312500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 304.3945312500 MiB 304.3945312500 MiB           1   @profile(precision=10,stream=open("census_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 304.3945312500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 304.3945312500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 304.3984375000 MiB 304.3984375000 MiB           1   @profile(precision=10,stream=open("census_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 304.3984375000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 304.3984375000 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 304.3984375000 MiB 304.3984375000 MiB           1   @profile(precision=10,stream=open("census_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 304.3984375000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 304.3984375000 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 304.3984375000 MiB 304.3984375000 MiB           1   @profile(precision=10,stream=open("census_BAI.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 304.4648437500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 304.4648437500 MiB   0.0664062500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


