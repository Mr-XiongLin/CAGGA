Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 200.7851562500 MiB 200.7851562500 MiB           1   @profile(precision=10,stream=open("Stream2A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 201.8046875000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 201.8046875000 MiB   1.0195312500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 201.8046875000 MiB 201.8046875000 MiB           1   @profile(precision=10,stream=open("Stream2A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 202.3437500000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 202.3437500000 MiB   0.5390625000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 202.3437500000 MiB 202.3437500000 MiB           1   @profile(precision=10,stream=open("Stream2A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 202.7812500000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 202.7812500000 MiB   0.4375000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 202.7812500000 MiB 202.7812500000 MiB           1   @profile(precision=10,stream=open("Stream2A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 203.3750000000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 203.3750000000 MiB   0.5937500000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 203.3750000000 MiB 203.3750000000 MiB           1   @profile(precision=10,stream=open("Stream2A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 203.7226562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 203.7226562500 MiB   0.3476562500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 203.7226562500 MiB 203.7226562500 MiB           1   @profile(precision=10,stream=open("Stream2A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 203.9726562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 203.9726562500 MiB   0.2500000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 203.9726562500 MiB 203.9726562500 MiB           1   @profile(precision=10,stream=open("Stream2A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 204.0976562500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 204.0976562500 MiB   0.1250000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 204.0976562500 MiB 204.0976562500 MiB           1   @profile(precision=10,stream=open("Stream2A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 204.3203125000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 204.3203125000 MiB   0.2226562500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 204.3203125000 MiB 204.3203125000 MiB           1   @profile(precision=10,stream=open("Stream2A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 205.0078125000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 205.0078125000 MiB   0.6875000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 205.0078125000 MiB 205.0078125000 MiB           1   @profile(precision=10,stream=open("Stream2A_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 205.5703125000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 205.5703125000 MiB   0.5625000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


