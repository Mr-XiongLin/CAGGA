Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 187.7812500000 MiB 187.7812500000 MiB           1   @profile(precision=10,stream=open("NonSkin_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 188.5859375000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 188.5859375000 MiB   0.8046875000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 188.5859375000 MiB 188.5859375000 MiB           1   @profile(precision=10,stream=open("NonSkin_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 188.7578125000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 188.7578125000 MiB   0.1718750000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 188.7578125000 MiB 188.7578125000 MiB           1   @profile(precision=10,stream=open("NonSkin_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 188.8750000000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 188.8750000000 MiB   0.1171875000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 188.8750000000 MiB 188.8750000000 MiB           1   @profile(precision=10,stream=open("NonSkin_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 189.0585937500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 189.0585937500 MiB   0.1835937500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 189.0585937500 MiB 189.0585937500 MiB           1   @profile(precision=10,stream=open("NonSkin_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 189.2617187500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 189.2617187500 MiB   0.2031250000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 189.2617187500 MiB 189.2617187500 MiB           1   @profile(precision=10,stream=open("NonSkin_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 189.3789062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 189.3789062500 MiB   0.1171875000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 189.3789062500 MiB 189.3789062500 MiB           1   @profile(precision=10,stream=open("NonSkin_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 189.4414062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 189.4414062500 MiB   0.0625000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 189.4414062500 MiB 189.4414062500 MiB           1   @profile(precision=10,stream=open("NonSkin_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 189.6914062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 189.6914062500 MiB   0.2500000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 189.6914062500 MiB 189.6914062500 MiB           1   @profile(precision=10,stream=open("NonSkin_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 189.8203125000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 189.8203125000 MiB   0.1289062500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 189.8203125000 MiB 189.8203125000 MiB           1   @profile(precision=10,stream=open("NonSkin_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 189.9414062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 189.9414062500 MiB   0.1210937500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


