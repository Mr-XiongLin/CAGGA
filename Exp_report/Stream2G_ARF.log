Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 200.6250000000 MiB 200.6250000000 MiB           1   @profile(precision=10,stream=open("Stream2G_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 201.6523437500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 201.6523437500 MiB   1.0273437500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 201.6523437500 MiB 201.6523437500 MiB           1   @profile(precision=10,stream=open("Stream2G_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 202.2656250000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 202.2656250000 MiB   0.6132812500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 202.2656250000 MiB 202.2656250000 MiB           1   @profile(precision=10,stream=open("Stream2G_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 202.8789062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 202.8789062500 MiB   0.6132812500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 202.8789062500 MiB 202.8789062500 MiB           1   @profile(precision=10,stream=open("Stream2G_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 203.1953125000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 203.1953125000 MiB   0.3164062500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 203.1953125000 MiB 203.1953125000 MiB           1   @profile(precision=10,stream=open("Stream2G_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 203.2187500000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 203.2187500000 MiB   0.0234375000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 203.2187500000 MiB 203.2187500000 MiB           1   @profile(precision=10,stream=open("Stream2G_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 203.7031250000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 203.7031250000 MiB   0.4843750000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 203.7031250000 MiB 203.7031250000 MiB           1   @profile(precision=10,stream=open("Stream2G_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 204.1015625000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 204.1015625000 MiB   0.3984375000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 204.1015625000 MiB 204.1015625000 MiB           1   @profile(precision=10,stream=open("Stream2G_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 204.4062500000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 204.4062500000 MiB   0.3046875000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 204.4062500000 MiB 204.4062500000 MiB           1   @profile(precision=10,stream=open("Stream2G_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 204.4960937500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 204.4960937500 MiB   0.0898437500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 204.4960937500 MiB 204.4960937500 MiB           1   @profile(precision=10,stream=open("Stream2G_ARF.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 205.2148437500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 205.2148437500 MiB   0.7187500000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


