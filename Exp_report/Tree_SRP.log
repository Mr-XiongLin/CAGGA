Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 173.9179687500 MiB 173.9179687500 MiB           1   @profile(precision=10,stream=open("Tree_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 175.5234375000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 175.5234375000 MiB   1.6054687500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 175.5234375000 MiB 175.5234375000 MiB           1   @profile(precision=10,stream=open("Tree_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 176.9218750000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 176.9218750000 MiB   1.3984375000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 176.9218750000 MiB 176.9218750000 MiB           1   @profile(precision=10,stream=open("Tree_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 176.9609375000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 176.9609375000 MiB   0.0390625000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 176.9609375000 MiB 176.9609375000 MiB           1   @profile(precision=10,stream=open("Tree_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 177.0000000000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 177.0000000000 MiB   0.0390625000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 177.0000000000 MiB 177.0000000000 MiB           1   @profile(precision=10,stream=open("Tree_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 177.0000000000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 177.0000000000 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 177.0000000000 MiB 177.0000000000 MiB           1   @profile(precision=10,stream=open("Tree_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 177.0000000000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 177.0000000000 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 177.0000000000 MiB 177.0000000000 MiB           1   @profile(precision=10,stream=open("Tree_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 177.0000000000 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 176.9414062500 MiB  -0.0585937500 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 176.9414062500 MiB 176.9414062500 MiB           1   @profile(precision=10,stream=open("Tree_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 176.9414062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 176.9414062500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 176.9414062500 MiB 176.9414062500 MiB           1   @profile(precision=10,stream=open("Tree_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 176.9414062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 176.9414062500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


Filename: meta.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   133 176.9414062500 MiB 176.9414062500 MiB           1   @profile(precision=10,stream=open("Tree_SRP.log", "w+"))
   134                                         def test_train(ep,Mclf,X,y):
   135 176.9414062500 MiB   0.0000000000 MiB           2       for clf,clf_label in Mclf:
   136 176.9414062500 MiB   0.0000000000 MiB           1           Comp_start = time.time();y_pred = clf.predict(X);clf_a = accuracy_score(y, y_pred);clf.partial_fit(X, y,[1,0]);Time.append(time.time() - Comp_start);Acc.append(clf_a)


